-- 데이터베이스 검색(SELECT ~ FROM): 해당 테이블에서 원하는 정보를 검색할 때 사용
--  - 원래 테이블의 내용은 변경 되지 않는다(COMMIT을 할 필요 없다.)
--  - 결과는 테이블형태로 나온다.(JAVA에서 ResultSet)
--  - 대/소문자 구별하지 않는다.(단, 조건에서는 대소문자를 구별한다)
--  - 문자, 날짜, 조건은 홀따옴표를 사용한다.
-- SELECT [ALL | DISTINCT] 컬럼명1, 컬럼명2, 컬럼명3 
-- FROM 테이블명 [WHERE 조건절];

-- 특정 컬럼이 아닌 모든 컬럼을 지정할때는 *을 사용
-- 고객테이블의 모든 정보 검색
SELECT * FROM 고객;

-- 고객테이블에서 고객아이디, 고객이름, 등급 속성만 검색
SELECT 고객아이디, 고객이름, 등급 FROM 고객;

-- 고객테이블에서 등급만 검색(중복제거)
SELECT DISTINCT 등급 FROM 고객;

-- 별칭: 속성명을 바꾸어 출력(실제 변경은 안된다)
--  속성명 AS 별칭 또는 속석명별칭
-- 제품 테이블에서 제품명과 단가를 검색하되, 단가를 가격이라는 새 이름으로 출력해보자
SELECT 제품명, 단가 AS 가격 FROM 제품;

-- 속성의 타입이 날짜나 NUMBER이면 산술연산이 가능하다.
-- 제품 테이블에서 제품명, 단가, 단가+500을 조정가격이라는 컬럼명으로 검색하자.
SELECT 제품명, 단가, 단가+500 AS 조정가격 FROM 제품;

-- 주문 테이블에 주문일자와 주문일자+5 AS 도착일자라는 컬럼명으로 검색하자
SELECT 주문일자, 주문일자+5 AS 도착일자 FROM 주문;

-- [WHERE 조건]: 조건을 만족하는 데이터만 검색(컬럼명 연산자)
--  1. 비교연산(=(같다), <>(같지 않다), >=, <=, >, <)
--  2. 논리연산(AND, OR, NOT)
--  3. LIKE: 부분적으로 일치하는 데이터 검색
--      %: 0개 이상의 문자(문자의 내용과 개수는 상관없음)
--      _: 1개의 문자(내용은 상관없음, 개수는 반드시 1:1 매칭)
--  4. NULL 검색: 비교연산자 사용x, IS NULL, IS NOT NULL 사용
--      컬럼명 IS NULL: 값이 NULL인 컬럼 찾기
--      컬럼명 IS NOT NULL: 값이 NULL이 아닌 컬럼 찾기

-- 고객 테이블에서 직업이 학생이 사람만 검색하자
SELECT * FROM 고객 WHERE 직업 = '학생';

-- 고객 테이블에서 직업이 학생을 제외한 사람의 모든 정보를 검색하자
SELECT * FROM 고객 WHERE 직업<> '학생';

-- 고객 테이블에서 적립금이 3000이상인 사람의 모든 정보 검색
SELECT * FROM 고객 WHERE 적립금 >= 3000;

-- 고객 테이블에서 적립금이 3000미만인 사람의 모든 정보 검색
SELECT * FROM 고객 WHERE 적립금 < 3000;

-- 고객 테이블에서 적립금이 1000~3000인 사람의 모든 정보 검색
SELECT * FROM 고객 WHERE 적립금 >=1000 AND 적립금 <=3000;
SELECT * FROM 고객 WHERE 적립금 BETWEEN 1000 AND 3000;

-- 고객 테이블에서 직업이 학생이거나 교사인 사람의 모든 정보 검색
SELECT * FROM 고객 WHERE 직업 = '학생' OR 직업 = '교사';
SELECT * FROM 고객 WHERE 직업 IN ('학생', '교사');

-- 고객 테이블에서 성이 김씨인 고객의 모든 정보를 검색
SELECT * FROM 고객 WHERE 고객이름 LIKE '김%';

-- 제품 테이블에서 제품명 '만두'로 끝나는 제품의 모든 정보 검색
SELECT * FROM 제품 WHERE 제품명 LIKE '%만두';

-- 제품 테이블에서 제조업체 중 '한'을 포함한 제품의 모든 정보 검색
SELECT * FROM 제품 WHERE 제조업체 LIKE '%한%';

-- 고객 테이블에서 고객 아이디가 5자인 고객의 고객아이디, 고객이름, 등급을 검색
SELECT 고객아이디, 고객이름, 등급 FROM 고객 WHERE 고객아이디 LIKE '_____';

-- 고객 테이블에서 나이가 입력되지 않은 고객의 모든 정보를 검색하자
SELECT * FROM 고객 WHERE 나이 IS NULL;

-- 고객 테이블에서 나이가 입력된 고객의 모든 정보를 검색하자
SELECT * FROM 고객 WHERE 나이 IS NOT NULL;

-- 정렬: 언제나 맨 마지막 줄에 넣는다.
-- ORDER BY 키워드 이용, ASC 오름차순(생략가능), DESC 내림차순
-- NULL은 오름차순 일 때 맨마지막, 내림차순 일 때 맨위에 출력
-- 형식) ORDER BY 컬럼명 [ASC | DESC];
-- 고객 테이블에서 고객이름, 등급, 나이를 검색하되, 나이를 기준으로 내림차순 정렬 해보자
SELECT 고객이름, 등급, 나이 FROM 고객 ORDER BY 나이 DESC; -- 내림
SELECT 고객이름, 등급, 나이 FROM 고객 ORDER BY 나이 ASC; -- 오름
SELECT 고객이름, 등급, 나이 FROM 고객 ORDER BY 나이; -- 오름

-- 주문 테이블에서 주문고객, 주문제품, 수량, 주문일자를 검색해보자
-- (단, 주문제품을 기준으로 오름차순 정렬하고, 동일 제품은 수량을 기준으로 내림차순 하자)
SELECT 주문고객, 주문제품, 수량, 주문일자 FROM 주문 ORDER BY 주문제품 ASC, 수량 DESC;
